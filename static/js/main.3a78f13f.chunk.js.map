{"version":3,"sources":["components/DatepickerHeader/index.js","components/DatepickerBottom/index.js","components/DatepickerWrapp/index.js","pages/Datepicker/index.js","App.js","serviceWorker.js","index.js"],"names":["DatepickerHeader","onHeaderHeightInit","this","props","headerElement","clientHeight","startDate","time_start","endDate","time_end","onReset","className","ref","onClick","type","moment","format","Component","DatepickerBottom","handleOnChangeStart","data","onInitStartTime","data_start","from","sliderWidth","timerangeItem","clientWidth","setState","class","end_start","add","handleOnChangeEnd","onInitEndTime","classEnd","handleOnFinish","perc","from_percent","start_date","end_date","isAfter","disableSlider","ionSliderEnd","update","min","state","start","max","end","step","hide_min_max","end_end","Number","handleOnFinishEnd","prettify","num","alert","end_selected","onBottomHeightInit","bottomElement","nextProps","onResetTime","ionSliderStart","daySize","style","paddingLeft","r","parseFloat","onChange","onFinish","width","DatepickerWrapp","renderDay","day","height","Math","ceil","headerDay","selectOnlyStart","heightWrapp","focusedInput","onDatesChange","onFocusChange","headerHeight","bottomHeight","window","innerHeight","orientation","numberOfMonths","renderDayContents","noNavButtons","noBorder","minimumNights","isOutsideRange","diff","DatePicker","time","minDate","innerWidth","classStart","paddingTop","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3a78f13f.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport moment from 'moment';\r\nimport './style.css';\r\n\r\nclass DatepickerHeader extends Component {\r\n    componentDidMount() {\r\n        let { onHeaderHeightInit } = this.props;\r\n\r\n        onHeaderHeightInit(this.headerElement.clientHeight);\r\n    }\r\n\r\n    render() {\r\n        const {startDate, time_start, endDate, time_end, onReset} = this.props;\r\n\r\n        return (\r\n            <div className=\"Datepicker-header\" ref={(headerElement) => { this.headerElement = headerElement }}>\r\n                <div className=\"Datepicker-header__reset\">\r\n                    <button className=\"Datepicker__button-reset\" onClick={onReset} type=\"button\">Reset</button>\r\n                </div>\r\n                <div className=\"Datepicker-header__wrapp\">\r\n                    <div className=\"Datepicker-header__item\">\r\n                        <div className=\"Datepicker-header__date\">\r\n                            {startDate\r\n                                ? moment(startDate).format(\"ddd, D MMMM\")\r\n                                : 'Start date'\r\n                            }\r\n                        </div>\r\n                        <div className=\"Datepicker-header__time\">\r\n                            {time_start ? moment(time_start, 'x').format(\"H:mm\") : null}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"Datepicker-header__delimiter\"></div>\r\n                    <div className=\"Datepicker-header__item\">\r\n                        <div className=\"Datepicker-header__item\">\r\n                            <div className=\"Datepicker-header__date\">\r\n                                {endDate\r\n                                    ? moment(endDate).format(\"ddd, D MMMM\")\r\n                                    : 'End date'\r\n                                }\r\n                            </div>\r\n                            <div className=\"Datepicker-header__time\">\r\n                                {time_end ? moment(time_end, 'x').format(\"H:mm\") : null}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n    \r\nexport default DatepickerHeader;","import React, { Component } from 'react';\r\nimport moment from 'moment';\r\nimport IonRangeSlider from 'react-ion-slider';\r\nimport './style.css';\r\n\r\nclass DatepickerBottom extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            time_end: null,\r\n            start: moment(\"2020-06-05 00:00\", \"YYYY-MM-DD HH:mm\"),\r\n            end: moment(\"2020-06-05 23:30\", \"YYYY-MM-DD HH:mm\"),\r\n            end_start: moment(\"2020-06-05 00:00\", \"YYYY-MM-DD HH:mm\"),\r\n            end_end: moment(\"2020-06-05 23:30\", \"YYYY-MM-DD HH:mm\"),\r\n            end_selected: null,\r\n            class: null,\r\n            disableSlider: null\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { onBottomHeightInit } = this.props;\r\n\r\n        onBottomHeightInit(this.bottomElement.clientHeight);\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.startDate !== this.props.startDate || nextProps.endDate !== this.props.endDate) {\r\n            const {startDate, endDate } = nextProps;\r\n            const { onResetTime } = this.props;\r\n            let start_date = moment(startDate).format(\"MM-DD-YYYY\");\r\n            let end_date = moment(endDate).format(\"MM-DD-YYYY\");\r\n\r\n            if (!moment(end_date).isAfter(start_date)) {\r\n                this.setState({ disableSlider: null });\r\n                onResetTime();\r\n                this.ionSliderStart.update({\r\n                    min: this.state.start.format(\"x\"),\r\n                    max: this.state.end.format(\"x\"),\r\n                    from: this.state.start.format(\"x\"),\r\n                    step: 1800000,\r\n                    hide_min_max: true\r\n                })\r\n\r\n                this.ionSliderEnd.update({\r\n                    min: this.state.start.format(\"x\"),\r\n                    max: this.state.end.format(\"x\"),\r\n                    from: this.state.start.format(\"x\"),\r\n                    step: 1800000,\r\n                    hide_min_max: true\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    handleOnChangeStart = (data) => {\r\n        const { onInitStartTime } = this.props;\r\n        const data_start = moment(data.from, 'x').format(\"H:mm\");\r\n        const sliderWidth = this.timerangeItem.clientWidth;\r\n\r\n        this.setState({ class: 'is-changing', sliderWidth: sliderWidth, end_start: moment(`2020-06-05 ${data_start}`, \"YYYY-MM-DD HH:mm\").add(1, 'hours') });\r\n        onInitStartTime(data.from);   \r\n    }\r\n\r\n    handleOnChangeEnd = (data) => {\r\n        const { onInitEndTime } = this.props;\r\n\r\n        this.setState({ classEnd: 'is-changing' })\r\n        onInitEndTime(data.from);\r\n    }\r\n\r\n    handleOnFinish = (data) => {\r\n        const perc = data.from_percent;\r\n        const { startDate, endDate, onInitEndTime, time_end, time_start} = this.props;\r\n\r\n        this.setState({ class: null });\r\n\r\n        if (startDate && endDate) {\r\n            let start_date = moment(startDate).format(\"MM-DD-YYYY\");\r\n            let end_date = moment(endDate).format(\"MM-DD-YYYY\");\r\n\r\n            if (moment(end_date).isAfter(start_date)) {\r\n                this.setState({ disableSlider: null })\r\n                this.ionSliderEnd.update({\r\n                    min: this.state.start.format(\"x\"),\r\n                    max: this.state.end.format(\"x\"),\r\n                    step: 1800000,\r\n                    hide_min_max: true\r\n                })\r\n            } else {\r\n                if (perc !== 0) {\r\n                    this.setState({ disableSlider: this.state.sliderWidth * (perc / 100) })\r\n                } else {\r\n                    this.setState({ disableSlider: this.state.sliderWidth * (6 / 100) })\r\n                }\r\n                this.ionSliderEnd.update({\r\n                    min: this.state.end_start.format(\"x\"),\r\n                    max: this.state.end_end.format(\"x\"),\r\n                    step: 1800000,\r\n                    hide_min_max: true\r\n                })\r\n\r\n                if (!time_end) {\r\n                    onInitEndTime(this.state.end_start)\r\n                } else {\r\n                    if (typeof time_end === 'object') {\r\n                        if (time_start > Number(time_end.format(\"x\"))) {\r\n                            onInitEndTime(this.state.end_start)\r\n                        }\r\n                    } else {\r\n                        if (time_start > Number(time_end)) {\r\n                            onInitEndTime(this.state.end_start)\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } else if (!startDate || !endDate) {\r\n            if (perc !== 0) {\r\n                this.setState({ disableSlider: this.state.sliderWidth * (perc / 100) })\r\n            } else {\r\n                this.setState({ disableSlider: this.state.sliderWidth * (6 / 100) })\r\n            }\r\n\r\n            this.ionSliderEnd.update({\r\n                min: this.state.end_start.format(\"x\"),\r\n                max: this.state.end_end.format(\"x\"),\r\n                step: 1800000,\r\n                hide_min_max: true\r\n            })\r\n\r\n            if (!time_end) {\r\n                onInitEndTime(this.state.end_start)\r\n            } else {\r\n                if (typeof time_end === 'object') {\r\n                    if (time_start > Number(time_end.format(\"x\"))) {\r\n                        onInitEndTime(this.state.end_start)\r\n                    }\r\n                } else {\r\n                    if (time_start > Number(time_end)) {\r\n                        onInitEndTime(this.state.end_start)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    handleOnFinishEnd = () => {\r\n        this.setState({ classEnd: null })\r\n    }\r\n\r\n    prettify = (num) => {\r\n        return moment(num, 'x').format(\"H:mm\");\r\n    }\r\n\r\n    onClick = () => {\r\n        const { startDate, endDate, time_start, time_end } = this.props;\r\n\r\n        if (startDate && endDate) {\r\n            alert(`${moment(startDate).format(\"D MMMM\")}, ${moment(time_start, 'x').format(\"H:mm\")} - ${moment(endDate).format(\"D MMMM\")}, ${moment(time_end, 'x').format(\"H:mm\")}`);\r\n        } else {\r\n            alert('Select pickup and return date');\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { daySize } = this.props;\r\n\r\n        return (\r\n            <div className=\"Datepicker-bottom\" ref={(bottomElement) => { this.bottomElement = bottomElement }}>\r\n                <div className=\"Timerange\">\r\n                    <div className=\"Timerange-item\">\r\n                        <div className=\"Timerange-item__title\" style={{ paddingLeft: daySize / 2.5 }}>Start</div>\r\n                        <div ref={r => this.timerangeItem = r} className={`Timerange-item__slider ${this.state.class && this.state.class}`}>\r\n                            <IonRangeSlider\r\n                                ref={r => this.ionSliderStart = r}\r\n                                min={parseFloat(this.state.start.format(\"x\"))}\r\n                                max={parseFloat(this.state.end.format(\"x\"))}\r\n                                step={1800000}\r\n                                hide_min_max={true}\r\n                                prettify={this.prettify}\r\n                                onChange={this.handleOnChangeStart}\r\n                                onFinish={this.handleOnFinish} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"Timerange-item\">\r\n                        <div className=\"Timerange-item__title\" style={{ paddingLeft: daySize / 2.5 }}>End</div>\r\n                        {this.state.disableSlider &&\r\n                            <div className=\"Timerange-item__disable\" style={{ width: this.state.disableSlider}}></div> \r\n                        }\r\n                        <div className={`Timerange-item__slider ${this.state.classEnd && this.state.classEnd}`}>\r\n                            <IonRangeSlider\r\n                                ref={r => this.ionSliderEnd = r}\r\n                                min={parseFloat(this.state.end_start.format(\"x\"))}\r\n                                max={parseFloat(this.state.end_end.format(\"x\"))}\r\n                                step={1800000}\r\n                                hide_min_max={true}\r\n                                prettify={this.prettify}\r\n                                onChange={this.handleOnChangeEnd}\r\n                                onFinish={this.handleOnFinishEnd} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <button className=\"Datepicker-save\" onClick={this.onClick} type=\"button\">Save</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DatepickerBottom;","import React, { Component } from 'react';\r\nimport 'react-dates/initialize';\r\nimport { DayPickerRangeController } from 'react-dates';\r\nimport moment from 'moment';\r\nimport 'react-dates/lib/css/_datepicker.css';\r\nimport './style.css';\r\n\r\nclass DatepickerWrapp extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            height: 0,\r\n            headerDay: 0,\r\n            selectOnlyStart: false\r\n        };\r\n    }\r\n\r\n    renderDay = (day) => {\r\n        const daySize = this.props.daySize;\r\n\r\n        return (\r\n            <div className=\"CalendarDay__item\" style={{ height: Math.ceil(daySize)}}>\r\n                {day.format('D')}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.startDate && !nextProps.endDate) {\r\n            this.setState({selectOnlyStart: true})\r\n        } else if (!nextProps.startDate && !nextProps.endDate) {\r\n            this.setState({selectOnlyStart: false})\r\n        } else if (nextProps.startDate && nextProps.endDate) {\r\n            this.setState({selectOnlyStart: false})\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { startDate, endDate, focusedInput, daySize, onDatesChange, onFocusChange, headerHeight, bottomHeight} = this.props;\r\n        let heightWrapp;\r\n\r\n        if (headerHeight > 0 && bottomHeight > 0) {\r\n            heightWrapp = window.innerHeight - headerHeight - bottomHeight - 15\r\n        }\r\n\r\n        return (\r\n            <div className={`Datepicker-wrapp ${this.state.selectOnlyStart ? 'is-selecting-start' : null}`} style={{ height: heightWrapp }}>\r\n                <DayPickerRangeController\r\n                    startDate={startDate}\r\n                    endDate={endDate}\r\n                    onDatesChange={onDatesChange}\r\n                    focusedInput={focusedInput}\r\n                    onFocusChange={onFocusChange}\r\n                    orientation=\"verticalScrollable\"\r\n                    numberOfMonths={12}\r\n                    renderDayContents={this.renderDay}\r\n                    noNavButtons\r\n                    noBorder\r\n                    minimumNights={0}\r\n                    daySize={daySize}\r\n                    isOutsideRange={day => (moment().diff(day) > 0)}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DatepickerWrapp;","import React, { Component } from 'react';\r\nimport moment from 'moment';\r\nimport DatepickerHeader from '../../components/DatepickerHeader';\r\nimport DatepickerBottom from '../../components/DatepickerBottom';\r\nimport DatepickerWrapp from '../../components/DatepickerWrapp';\r\nimport './style.css';\r\n\r\nclass DatePicker extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            headerHeight: 0,\r\n            bottomHeight: 0,\r\n            minDate: moment(),\r\n            startDate: null,\r\n            endDate: null,\r\n            focusedInput: 'startDate',\r\n            time_start: null,\r\n            time_end: null,\r\n            daySize: window.innerWidth / 7,\r\n            start: moment(\"2020-06-05 00:00\", \"YYYY-MM-DD HH:mm\"),\r\n            end: moment(\"2020-06-05 23:30\", \"YYYY-MM-DD HH:mm\"),\r\n            end_start: moment(\"2020-06-05 00:00\", \"YYYY-MM-DD HH:mm\"),\r\n            end_end: moment(\"2020-06-05 23:30\", \"YYYY-MM-DD HH:mm\"),\r\n            classStart: null\r\n        };\r\n    }\r\n\r\n    onReset = () => {\r\n        this.setState({ startDate: null, endDate: null, time_start: null, time_end: null });\r\n    }\r\n\r\n    onResetTime = () => {\r\n        this.setState({ time_start: null, time_end: null });\r\n    }\r\n\r\n    onDatesChange = ({startDate, endDate}) => {\r\n        this.setState({ startDate, endDate })\r\n    }\r\n\r\n    onFocusChange = focusedInput => this.setState({ focusedInput: focusedInput || 'startDate' })\r\n\r\n    onHeaderHeightInit = (height) => {\r\n        this.setState({ headerHeight: height})\r\n    }\r\n\r\n    onBottomHeightInit = (height) => {\r\n        this.setState({ bottomHeight: height})\r\n    }\r\n\r\n    onInitStartTime = (time) => {\r\n        this.setState({ time_start: time })\r\n    }\r\n\r\n    onInitEndTime = (time) => {\r\n        this.setState({ time_end: time })\r\n    }\r\n\r\n    render() {\r\n        const { startDate, endDate, focusedInput } = this.state;\r\n\r\n        return (\r\n            <div className=\"Datepicker\" style={{ height: window.innerHeight, paddingTop: this.state.headerHeight + 15 }}>\r\n                <DatepickerHeader\r\n                    onReset={this.onReset}\r\n                    onHeaderHeightInit={this.onHeaderHeightInit}\r\n                    startDate={startDate}\r\n                    time_start={this.state.time_start}\r\n                    endDate={endDate}\r\n                    time_end={this.state.time_end}\r\n                />\r\n                <DatepickerWrapp\r\n                    headerHeight={this.state.headerHeight}\r\n                    bottomHeight={this.state.bottomHeight}\r\n                    startDate={startDate}\r\n                    daySize={this.state.daySize}\r\n                    endDate={endDate}\r\n                    onDatesChange={this.onDatesChange}\r\n                    onFocusChange={this.onFocusChange}\r\n                    focusedInput={focusedInput}\r\n                />\r\n                <DatepickerBottom\r\n                    daySize={this.state.daySize}\r\n                    onResetTime={this.onResetTime}\r\n                    time_start={this.state.time_start}\r\n                    time_end={this.state.time_end}\r\n                    startDate={startDate}\r\n                    endDate={endDate}\r\n                    onInitStartTime={this.onInitStartTime}\r\n                    onInitEndTime={this.onInitEndTime}\r\n                    onBottomHeightInit={this.onBottomHeightInit}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DatePicker;","import React, { Component } from 'react';\nimport DatePicker from './pages/Datepicker';\nimport './App.css';\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\" >\n\t\t\t\t<DatePicker />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
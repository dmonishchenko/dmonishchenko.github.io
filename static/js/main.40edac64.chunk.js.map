{"version":3,"sources":["components/DatepickerHeader/index.js","components/DatepickerBottom/index.js","components/DatepickerWrapp/index.js","pages/DatepickerDesktop/index.js","pages/DatepickerDesktopPrice/index.js","pages/DatepickerMobile/index.js","App.js","serviceWorker.js","index.js"],"names":["DatepickerHeader","onHeaderHeightInit","this","props","headerElement","clientHeight","startDate","time_start","endDate","time_end","onReset","className","ref","onClick","type","isMobile","moment","format","Component","DatepickerBottom","handleOnChangeStart","data","onInitStartTime","data_start","from","sliderWidth","timerangeItem","clientWidth","setState","class","end_start","handleOnChangeEnd","onInitEndTime","classEnd","handleOnFinish","start_date","end_date","isAfter","ionSliderEnd","update","min","state","start","max","end","step","hide_min_max","Number","handleOnFinishEnd","prettify","num","alert","end_end","end_selected","onBottomHeightInit","bottomElement","nextProps","onResetTime","ionSliderStart","daySize","mode","style","paddingLeft","r","parseFloat","onChange","onFinish","DatepickerWrapp","renderDay","day","height","Math","ceil","lookupDay","item","car_prices","undefined","renderDayDesktop","renderDayDesktopWithPrice","isDayBlocked","notValid","datesBlocked","headerDay","selectOnlyStart","hideDatePicker","calendarFocused","heightWrapp","focusedInput","onDatesChange","onFocusChange","headerHeight","bottomHeight","window","innerHeight","orientation","numberOfMonths","renderDayContents","noNavButtons","noBorder","minimumNights","hideKeyboardShortcutsPanel","isOutsideRange","isInclusivelyAfterDay","isBrowser","startDateId","endDateId","DatePickerDesktop","time","minDate","innerWidth","classStart","paddingTop","homeDatePicker","cardDatePicker","datePickerMode","onChangeDatePickerMode","DatePickerDesktopPrice","highlightDays","today_date","selected_date","filtered_days_after","filterBlockedDateAfter","filtered_days_before","filterBlockedDateBefore","unavailable_date","Object","keys","find","key","full_days","daysInMonthAfter","monthDate","i","clone","add","assign","car_availability","first_selected","visible","fetch","then","res","json","result","result_day","availability","start_day","new_obj","getCountDays","length","values","prices","error","console","log","select_day","datesBlockAfter","datesBlockBefore","today_day","a","diff","DatePickerMobile","App","document","getElementsByTagName","classList","history","basename","path","component","to","withRouter","Boolean","location","hostname","match","createBrowserHistory","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.40edac64.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { isMobile } from \"react-device-detect\";\r\nimport moment from 'moment';\r\nimport './style.css';\r\n\r\nclass DatepickerHeader extends Component {\r\n    componentDidMount() {\r\n        let { onHeaderHeightInit } = this.props;\r\n\r\n        onHeaderHeightInit(this.headerElement.clientHeight);\r\n    }\r\n\r\n    render() {\r\n        const {startDate, time_start, endDate, time_end, onReset} = this.props;\r\n\r\n        return (\r\n            <div className=\"Datepicker-header\" ref={(headerElement) => { this.headerElement = headerElement }}>\r\n                <div className=\"Datepicker-header__reset\">\r\n                    <button className=\"Datepicker__button-reset\" onClick={onReset} type=\"button\">Reset</button>\r\n                </div>\r\n                {isMobile &&\r\n                    <div className=\"Datepicker-header__wrapp\">\r\n                        <div className=\"Datepicker-header__item\">\r\n                            <div className=\"Datepicker-header__date\">\r\n                                {startDate\r\n                                    ? moment(startDate).format(\"ddd, D MMMM\")\r\n                                    : 'Start date'\r\n                                }\r\n                            </div>\r\n                            <div className=\"Datepicker-header__time\">\r\n                                {time_start ? moment(time_start, 'x').format(\"H:mm\") : null}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"Datepicker-header__delimiter\"></div>\r\n                        <div className=\"Datepicker-header__item\">\r\n                            <div className=\"Datepicker-header__item\">\r\n                                <div className=\"Datepicker-header__date\">\r\n                                    {endDate\r\n                                        ? moment(endDate).format(\"ddd, D MMMM\")\r\n                                        : 'End date'\r\n                                    }\r\n                                </div>\r\n                                <div className=\"Datepicker-header__time\">\r\n                                    {time_end ? moment(time_end, 'x').format(\"H:mm\") : null}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n    \r\nexport default DatepickerHeader;","import React, { Component } from 'react';\r\nimport moment from 'moment';\r\nimport IonRangeSlider from 'react-ion-slider';\r\nimport { isMobile } from \"react-device-detect\";\r\nimport './style.css';\r\n\r\nclass DatepickerBottom extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            time_end: null,\r\n            start: moment(\"2020-06-05 00:00\", \"YYYY-MM-DD HH:mm\"),\r\n            end: moment(\"2020-06-05 23:30\", \"YYYY-MM-DD HH:mm\"),\r\n            end_start: moment(\"2020-06-05 00:00\", \"YYYY-MM-DD HH:mm\"),\r\n            end_end: moment(\"2020-06-05 23:30\", \"YYYY-MM-DD HH:mm\"),\r\n            end_selected: null,\r\n            class: null\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { onBottomHeightInit } = this.props;\r\n\r\n        onBottomHeightInit(this.bottomElement.clientHeight);\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.startDate !== this.props.startDate || nextProps.endDate !== this.props.endDate) {\r\n            const {startDate, endDate } = nextProps;\r\n            const { onResetTime } = this.props;\r\n            let start_date = moment(startDate).format(\"MM-DD-YYYY\");\r\n            let end_date = moment(endDate).format(\"MM-DD-YYYY\");\r\n\r\n            if (!moment(end_date).isAfter(start_date) && isMobile) {\r\n                onResetTime();\r\n                this.ionSliderStart.update({\r\n                    min: this.state.start.format(\"x\"),\r\n                    max: this.state.end.format(\"x\"),\r\n                    from: this.state.start.format(\"x\"),\r\n                    step: 1800000,\r\n                    hide_min_max: true\r\n                })\r\n\r\n                this.ionSliderEnd.update({\r\n                    min: this.state.start.format(\"x\"),\r\n                    max: this.state.end.format(\"x\"),\r\n                    from: this.state.start.format(\"x\"),\r\n                    step: 1800000,\r\n                    hide_min_max: true\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    handleOnChangeStart = (data) => {\r\n        const { onInitStartTime } = this.props;\r\n        const data_start = moment(data.from, 'x').format(\"H:mm\");\r\n        const sliderWidth = this.timerangeItem.clientWidth;\r\n\r\n        this.setState({ class: 'is-changing', sliderWidth: sliderWidth, end_start: moment(`2020-06-05 ${data_start}`, \"YYYY-MM-DD HH:mm\") });\r\n        onInitStartTime(data.from);   \r\n    }\r\n\r\n    handleOnChangeEnd = (data) => {\r\n        const { onInitEndTime } = this.props;\r\n\r\n        this.setState({ classEnd: 'is-changing' })\r\n        onInitEndTime(data.from);\r\n    }\r\n\r\n    handleOnFinish = (data) => {\r\n        const { startDate, endDate, onInitEndTime, time_end, time_start} = this.props;\r\n\r\n        this.setState({ class: null });\r\n\r\n        if (startDate && endDate) {\r\n            let start_date = moment(startDate).format(\"MM-DD-YYYY\");\r\n            let end_date = moment(endDate).format(\"MM-DD-YYYY\");\r\n\r\n            if (moment(end_date).isAfter(start_date)) {\r\n                this.ionSliderEnd.update({\r\n                    min: this.state.start.format(\"x\"),\r\n                    max: this.state.end.format(\"x\"),\r\n                    step: 1800000,\r\n                    hide_min_max: true\r\n                })\r\n            } else {\r\n                if (!time_end) {\r\n                    onInitEndTime(this.state.end_start)\r\n                    this.ionSliderEnd.update({\r\n                        min: this.state.start.format(\"x\"),\r\n                        max: this.state.end.format(\"x\"),\r\n                        from: this.state.end_start.format(\"x\"),\r\n                        step: 1800000,\r\n                        hide_min_max: true\r\n                    })\r\n                } else {\r\n                    if (typeof time_end === 'object') {\r\n                        if (time_start > Number(time_end.format(\"x\"))) {\r\n                            onInitEndTime(this.state.end_start)\r\n                            this.ionSliderEnd.update({\r\n                                min: this.state.start.format(\"x\"),\r\n                                max: this.state.end.format(\"x\"),\r\n                                from: this.state.end_start.format(\"x\"),\r\n                                step: 1800000,\r\n                                hide_min_max: true\r\n                            })\r\n                        }\r\n                    } else {\r\n                        if (time_start > Number(time_end)) {\r\n                            onInitEndTime(this.state.end_start)\r\n                            this.ionSliderEnd.update({\r\n                                min: this.state.start.format(\"x\"),\r\n                                max: this.state.end.format(\"x\"),\r\n                                from: this.state.end_start.format(\"x\"),\r\n                                step: 1800000,\r\n                                hide_min_max: true\r\n                            })\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } else if (!startDate || !endDate) {\r\n            if (!time_end) {\r\n                onInitEndTime(this.state.end_start)\r\n                this.ionSliderEnd.update({\r\n                    min: this.state.start.format(\"x\"),\r\n                    max: this.state.end.format(\"x\"),\r\n                    from: this.state.end_start.format(\"x\"),\r\n                    step: 1800000,\r\n                    hide_min_max: true\r\n                })\r\n            } else {\r\n                if (typeof time_end === 'object') {\r\n                    if (time_start > Number(time_end.format(\"x\"))) {\r\n                        onInitEndTime(this.state.end_start)\r\n                        this.ionSliderEnd.update({\r\n                            min: this.state.start.format(\"x\"),\r\n                            max: this.state.end.format(\"x\"),\r\n                            from: this.state.end_start.format(\"x\"),\r\n                            step: 1800000,\r\n                            hide_min_max: true\r\n                        })\r\n                    }\r\n                } else {\r\n                    if (time_start > Number(time_end)) {\r\n                        onInitEndTime(this.state.end_start)\r\n                        this.ionSliderEnd.update({\r\n                            min: this.state.start.format(\"x\"),\r\n                            max: this.state.end.format(\"x\"),\r\n                            from: this.state.end_start.format(\"x\"),\r\n                            step: 1800000,\r\n                            hide_min_max: true\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    handleOnFinishEnd = () => {\r\n        this.setState({ classEnd: null })\r\n    }\r\n\r\n    prettify = (num) => {\r\n        return moment(num, 'x').format(\"H:mm\");\r\n    }\r\n\r\n    onClick = () => {\r\n        const { startDate, endDate, time_start, time_end } = this.props;\r\n\r\n        if (isMobile) {\r\n            if (startDate && endDate) {\r\n                alert(`${moment(startDate).format(\"D MMMM\")}, ${moment(time_start, 'x').format(\"H:mm\")} - ${moment(endDate).format(\"D MMMM\")}, ${moment(time_end, 'x').format(\"H:mm\")}`);\r\n            } else {\r\n                alert('Select pickup and return date');\r\n            }\r\n        } else {\r\n            if (startDate && endDate) {\r\n                alert(`${moment(startDate).format(\"D MMMM\")} - ${moment(endDate).format(\"D MMMM\")}`);\r\n            } else {\r\n                alert('Select pickup and return date');\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { daySize, mode } = this.props;\r\n        \r\n        return (\r\n            <div className=\"Datepicker-bottom\" ref={(bottomElement) => { this.bottomElement = bottomElement }}>\r\n                {isMobile && mode === 'mobile' &&\r\n                    <div className=\"Timerange\">\r\n                        <div className=\"Timerange-item\">\r\n                            <div className=\"Timerange-item__title\" style={{ paddingLeft: daySize / 2.5 }}>Start</div>\r\n                            <div ref={r => this.timerangeItem = r} className={`Timerange-item__slider ${this.state.class && this.state.class}`}>\r\n                                <IonRangeSlider\r\n                                    ref={r => this.ionSliderStart = r}\r\n                                    min={parseFloat(this.state.start.format(\"x\"))}\r\n                                    max={parseFloat(this.state.end.format(\"x\"))}\r\n                                    step={1800000}\r\n                                    hide_min_max={true}\r\n                                    prettify={this.prettify}\r\n                                    onChange={this.handleOnChangeStart}\r\n                                    onFinish={this.handleOnFinish} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"Timerange-item\">\r\n                            <div className=\"Timerange-item__title\" style={{ paddingLeft: daySize / 2.5 }}>End</div>\r\n                            <div className={`Timerange-item__slider ${this.state.classEnd && this.state.classEnd}`}>\r\n                                <IonRangeSlider\r\n                                    ref={r => this.ionSliderEnd = r}\r\n                                    min={parseFloat(this.state.end_start.format(\"x\"))}\r\n                                    max={parseFloat(this.state.end_end.format(\"x\"))}\r\n                                    step={1800000}\r\n                                    hide_min_max={true}\r\n                                    prettify={this.prettify}\r\n                                    onChange={this.handleOnChangeEnd}\r\n                                    onFinish={this.handleOnFinishEnd} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                }\r\n                {isMobile && mode === 'mobile' &&\r\n                    <button className=\"Datepicker-save\" onClick={this.onClick} type=\"button\">Save</button>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DatepickerBottom;","import React, { Component } from 'react';\r\nimport 'react-dates/initialize';\r\nimport { DayPickerRangeController, DateRangePicker, isInclusivelyAfterDay } from 'react-dates';\r\nimport {\r\n    isBrowser,\r\n    isMobile\r\n} from \"react-device-detect\";\r\nimport moment from 'moment';\r\nimport 'react-dates/lib/css/_datepicker.css';\r\nimport './style.css';\r\n\r\nclass DatepickerWrapp extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            height: 0,\r\n            headerDay: 0,\r\n            selectOnlyStart: false,\r\n            hideDatePicker: false,\r\n            calendarFocused: false\r\n        };\r\n    }\r\n\r\n    renderDay = (day) => {\r\n        const daySize = this.props.daySize;\r\n\r\n        return (\r\n            <div className=\"CalendarDay__item\" style={{ height: Math.ceil(daySize)}}>\r\n                {day.format('D')}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    lookupDay = (day) => {\r\n        const { car_prices } = this.props;\r\n        let item = car_prices[day.format(\"YYYY-MM-DD\")];\r\n\r\n        if (item === undefined) {\r\n            item = null;\r\n        }\r\n        return item;\r\n    }\r\n    renderDayDesktop = (day) => {\r\n        return (\r\n            <div className=\"CalendarDay__item\">\r\n                {day.format('D')}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderDayDesktopWithPrice = (day) => {\r\n        let item = this.lookupDay(day);\r\n\r\n        return (\r\n            <div className=\"CalendarDay__item\">\r\n                {day.format('D')}\r\n                {item !== null &&\r\n                    <span className='CalendarDay_tooltip'>{item === null ? item : \"$\" + item}</span>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n    isDayBlocked = day => {\r\n        const { datesBlocked } = this.props;\r\n        let notValid = false;\r\n        \r\n        let item = datesBlocked[day.format(\"YYYY-MM-DD\")];\r\n\r\n        if (item === 'unavailable') {\r\n            notValid = true;\r\n        }\r\n        return notValid;\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.startDate && !nextProps.endDate) {\r\n            this.setState({selectOnlyStart: true})\r\n        } else if (!nextProps.startDate && !nextProps.endDate) {\r\n            this.setState({selectOnlyStart: false})\r\n        } else if (nextProps.startDate && nextProps.endDate) {\r\n            this.setState({selectOnlyStart: false})\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { startDate, endDate, focusedInput, daySize, onDatesChange, onFocusChange, headerHeight, bottomHeight, mode} = this.props;\r\n        let heightWrapp;\r\n\r\n        if (headerHeight > 0 && bottomHeight > 0) {\r\n            heightWrapp = window.innerHeight - headerHeight - bottomHeight - 15\r\n        }\r\n\r\n        return (\r\n            <div className={`Datepicker-wrapp ${this.state.selectOnlyStart ? 'is-selecting-start' : null}`} style={isMobile ? { height: heightWrapp } : null}>\r\n                {isMobile && mode === 'mobile' &&\r\n                    <DayPickerRangeController\r\n                        startDate={startDate}\r\n                        endDate={endDate}\r\n                        onDatesChange={onDatesChange}\r\n                        focusedInput={focusedInput}\r\n                        onFocusChange={onFocusChange}\r\n                        orientation=\"verticalScrollable\"\r\n                        numberOfMonths={12}\r\n                        renderDayContents={this.renderDay}\r\n                        noNavButtons\r\n                        noBorder\r\n                        minimumNights={0}\r\n                        daySize={daySize}\r\n                        hideKeyboardShortcutsPanel={true}\r\n                        isOutsideRange={day => !isInclusivelyAfterDay(day, moment())}\r\n                    />\r\n                }\r\n                {isBrowser && mode === 'desktop'\r\n                    ? <DateRangePicker\r\n                        startDate={startDate}\r\n                        endDate={endDate}\r\n                        startDateId='start'\r\n                        endDateId='end'\r\n                        onDatesChange={onDatesChange}\r\n                        focusedInput={focusedInput}\r\n                        onFocusChange={onFocusChange}\r\n                        renderDayContents={this.renderDayDesktop}\r\n                        minimumNights={0}\r\n                        numberOfMonths={2}\r\n                        noBorder\r\n                        hideKeyboardShortcutsPanel={true}\r\n                        isOutsideRange={day => !isInclusivelyAfterDay(day, moment())}\r\n                    /> : null \r\n                }\r\n                {isBrowser && mode === 'desktopPrice'\r\n                    ? <DateRangePicker\r\n                        startDate={startDate}\r\n                        endDate={endDate}\r\n                        startDateId='start'\r\n                        endDateId='end'\r\n                        onDatesChange={onDatesChange}\r\n                        focusedInput={focusedInput}\r\n                        onFocusChange={onFocusChange}\r\n                        renderDayContents={this.renderDayDesktopWithPrice}\r\n                        minimumNights={0}\r\n                        numberOfMonths={2}\r\n                        noBorder\r\n                        hideKeyboardShortcutsPanel={true}\r\n                        isOutsideRange={day => !isInclusivelyAfterDay(day, moment())}\r\n                        isDayBlocked={this.isDayBlocked}\r\n                    /> : null\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DatepickerWrapp;","import React, { Component } from 'react';\r\nimport moment from 'moment';\r\nimport DatepickerHeader from '../../components/DatepickerHeader';\r\nimport DatepickerBottom from '../../components/DatepickerBottom';\r\nimport DatepickerWrapp from '../../components/DatepickerWrapp';\r\nimport { isMobile } from \"react-device-detect\";\r\n\r\nclass DatePickerDesktop extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            headerHeight: 0,\r\n            bottomHeight: 0,\r\n            minDate: moment(),\r\n            startDate: null,\r\n            endDate: null,\r\n            focusedInput: isMobile ? 'startDate' : null,\r\n            time_start: null,\r\n            calendarFocused: false,\r\n            time_end: null,\r\n            daySize: window.innerWidth / 7,\r\n            start: moment(\"2020-06-05 00:00\", \"YYYY-MM-DD HH:mm\"),\r\n            end: moment(\"2020-06-05 23:30\", \"YYYY-MM-DD HH:mm\"),\r\n            end_start: moment(\"2020-06-05 00:00\", \"YYYY-MM-DD HH:mm\"),\r\n            end_end: moment(\"2020-06-05 23:30\", \"YYYY-MM-DD HH:mm\"),\r\n            classStart: null\r\n        };\r\n    }\r\n\r\n    onReset = () => {\r\n        this.setState({ startDate: null, endDate: null, time_start: null, time_end: null });\r\n    }\r\n\r\n    onResetTime = () => {\r\n        this.setState({ time_start: null, time_end: null });\r\n    }\r\n\r\n    onDatesChange = ({ startDate, endDate }) => {\r\n        this.setState({ startDate, endDate })\r\n    }\r\n\r\n    onFocusChange = focusedInput => this.setState({ focusedInput: isMobile ? (focusedInput || 'startDate') : focusedInput })\r\n\r\n    onHeaderHeightInit = (height) => {\r\n        this.setState({ headerHeight: height })\r\n    }\r\n\r\n    onBottomHeightInit = (height) => {\r\n        this.setState({ bottomHeight: height })\r\n    }\r\n\r\n    onInitStartTime = (time) => {\r\n        this.setState({ time_start: time })\r\n    }\r\n\r\n    onInitEndTime = (time) => {\r\n        this.setState({ time_end: time })\r\n    }\r\n\r\n    render() {\r\n        const { startDate, endDate, focusedInput } = this.state;\r\n\r\n        return (\r\n            <div className=\"Datepicker\" style={isMobile ? { height: window.innerHeight, paddingTop: this.state.headerHeight + 15 } : null}>\r\n                <DatepickerHeader\r\n                    onReset={this.onReset}\r\n                    onHeaderHeightInit={this.onHeaderHeightInit}\r\n                    startDate={startDate}\r\n                    time_start={this.state.time_start}\r\n                    endDate={endDate}\r\n                    time_end={this.state.time_end}\r\n                />\r\n                <DatepickerWrapp\r\n                    headerHeight={this.state.headerHeight}\r\n                    bottomHeight={this.state.bottomHeight}\r\n                    startDate={startDate}\r\n                    daySize={this.state.daySize}\r\n                    endDate={endDate}\r\n                    mode='desktop'\r\n                    onDatesChange={this.onDatesChange}\r\n                    onFocusChange={this.onFocusChange}\r\n                    homeDatePicker={this.state.homeDatePicker}\r\n                    cardDatePicker={this.state.cardDatePicker}\r\n                    focusedInput={focusedInput}\r\n                />\r\n                <DatepickerBottom\r\n                    daySize={this.state.daySize}\r\n                    onResetTime={this.onResetTime}\r\n                    time_start={this.state.time_start}\r\n                    time_end={this.state.time_end}\r\n                    startDate={startDate}\r\n                    endDate={endDate}\r\n                    datePickerMode={this.state.datePickerMode}\r\n                    onChangeDatePickerMode={this.onChangeDatePickerMode}\r\n                    onInitStartTime={this.onInitStartTime}\r\n                    onInitEndTime={this.onInitEndTime}\r\n                    onBottomHeightInit={this.onBottomHeightInit}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DatePickerDesktop;","import React, { Component } from 'react';\r\nimport moment from 'moment';\r\nimport DatepickerHeader from '../../components/DatepickerHeader';\r\nimport DatepickerBottom from '../../components/DatepickerBottom';\r\nimport DatepickerWrapp from '../../components/DatepickerWrapp';\r\nimport { isMobile } from \"react-device-detect\";\r\n\r\nclass DatePickerDesktopPrice extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            headerHeight: 0,\r\n            bottomHeight: 0,\r\n            minDate: moment(),\r\n            startDate: null,\r\n            endDate: null,\r\n            focusedInput: isMobile ? 'startDate' : null,\r\n            time_start: null,\r\n            calendarFocused: false,\r\n            time_end: null,\r\n            daySize: window.innerWidth / 7,\r\n            start: moment(\"2020-06-05 00:00\", \"YYYY-MM-DD HH:mm\"),\r\n            end: moment(\"2020-06-05 23:30\", \"YYYY-MM-DD HH:mm\"),\r\n            end_start: moment(\"2020-06-05 00:00\", \"YYYY-MM-DD HH:mm\"),\r\n            end_end: moment(\"2020-06-05 23:30\", \"YYYY-MM-DD HH:mm\"),\r\n            classStart: null,\r\n            car_availability: null,\r\n            car_prices: null,\r\n            datesBlocked: null,\r\n            first_selected: false,\r\n            visible: true\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(\"https://run.mocky.io/v3/d1b5c91e-2637-4d86-b653-db32c1081724\")\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    let result_day = result.availability;\r\n                    let start_day = Object.keys(result.availability)[0];\r\n                    let count = this.getCountDays(start_day, this.state.minDate.format('YYYY-MM-DD'));\r\n                    let new_obj = {};\r\n\r\n                    for (let i = count; i < Object.keys(result_day).length; i++) {\r\n                        new_obj[Object.keys(result_day)[i]] = Object.values(result_day)[i]\r\n                    }\r\n\r\n                    this.setState({\r\n                        car_availability: new_obj,\r\n                        datesBlocked: new_obj,\r\n                        car_prices: result.prices\r\n                    });\r\n\r\n                },\r\n                (error) => {\r\n                    console.log(error)\r\n                }\r\n            )\r\n    }\r\n\r\n    componentWillUpdate() {\r\n        if (this.state.startDate && this.state.endDate && !this.state.first_selected) {\r\n            this.setState({ first_selected: true })\r\n        }\r\n    }\r\n\r\n    filterBlockedDateAfter(start_day, select_day) {\r\n        let count = this.getCountDays(start_day, select_day) + 1;\r\n        let datesBlockAfter = {};\r\n\r\n        for (let i = count; i < Object.keys(this.state.car_availability).length; i++) {\r\n            datesBlockAfter[Object.keys(this.state.car_availability)[i]] = Object.values(this.state.car_availability)[i]\r\n        }\r\n\r\n        return datesBlockAfter;\r\n    }\r\n\r\n    filterBlockedDateBefore(start_day, select_day) {\r\n        let count = this.getCountDays(start_day, select_day) - 1;\r\n        let datesBlockBefore = {};\r\n\r\n        for (let i = count; i >= 0; i--) {\r\n            datesBlockBefore[Object.keys(this.state.car_availability)[i]] = 'unavailable';\r\n        }\r\n\r\n        return datesBlockBefore;\r\n    }\r\n\r\n    getCountDays(today_day, select_day) {\r\n        let a = moment(today_day);\r\n        let b = moment(select_day);\r\n        let timeDifferenceInDays = b.diff(a, 'days');\r\n\r\n        return timeDifferenceInDays;\r\n    }\r\n\r\n    onReset = () => {\r\n        this.setState({ startDate: null, endDate: null, time_start: null, time_end: null, highlightDays: null });\r\n    }\r\n\r\n    onResetTime = () => {\r\n        this.setState({ time_start: null, time_end: null });\r\n    }\r\n\r\n    onDatesChange = ({ startDate, endDate }) => {\r\n        this.setState({ startDate, endDate })\r\n\r\n        if (startDate !== null && endDate === null) {\r\n            let today_date = this.state.minDate.format('YYYY-MM-DD');\r\n            let selected_date = startDate.format('YYYY-MM-DD');\r\n            let filtered_days_after = this.filterBlockedDateAfter(today_date, selected_date);\r\n            let filtered_days_before = this.filterBlockedDateBefore(today_date, selected_date);\r\n            let unavailable_date = Object.keys(filtered_days_after).find(key => filtered_days_after[key] === 'unavailable');\r\n\r\n            if (unavailable_date && moment(unavailable_date).isAfter(moment(selected_date))) {\r\n                let full_days = {};\r\n                let daysInMonthAfter = {};\r\n                let monthDate = moment(unavailable_date);\r\n\r\n                for (let i = 0; i < 365; i++) {\r\n                    let newDay = monthDate.clone().add(i, 'days');\r\n\r\n                    daysInMonthAfter[newDay.format('YYYY-MM-DD')] = 'unavailable'\r\n                }\r\n                full_days = Object.assign(filtered_days_before, daysInMonthAfter);\r\n                this.setState({ datesBlocked: full_days })\r\n            } else {\r\n                this.setState({ datesBlocked: filtered_days_before })\r\n            }\r\n        }\r\n\r\n        if (startDate !== null && endDate !== null) {\r\n            let focused = this.state.focusedInput;\r\n\r\n            if (focused === 'startDate' && this.state.startDate && this.state.endDate) {\r\n                this.setState({ endDate: null });\r\n\r\n                let today_date = this.state.minDate.format('YYYY-MM-DD');\r\n                let selected_date = startDate.format('YYYY-MM-DD');\r\n                let filtered_days_after = this.filterBlockedDateAfter(today_date, selected_date);\r\n                let filtered_days_before = this.filterBlockedDateBefore(today_date, selected_date);\r\n                let unavailable_date = Object.keys(filtered_days_after).find(key => filtered_days_after[key] === 'unavailable');\r\n\r\n                if (unavailable_date && moment(unavailable_date).isAfter(moment(selected_date))) {\r\n                    let full_days = {};\r\n                    let daysInMonthAfter = {};\r\n                    let monthDate = moment(unavailable_date);\r\n\r\n                    for (let i = 0; i < 365; i++) {\r\n                        let newDay = monthDate.clone().add(i, 'days');\r\n\r\n                        daysInMonthAfter[newDay.format('YYYY-MM-DD')] = 'unavailable'\r\n                    }\r\n\t\t\t\t\tfull_days = Object.assign(filtered_days_before, daysInMonthAfter);\r\n                    this.setState({ datesBlocked: full_days })\r\n\t\t\t\t\t\r\n                } else {\r\n                    this.setState({ datesBlocked: filtered_days_before })\r\n                }\r\n            } else {\r\n                this.setState({ datesBlocked: this.state.car_availability })\r\n            }\r\n        }\r\n    }\r\n\r\n    onFocusChange = focusedInput => {\r\n        if (focusedInput === null) {\r\n\t\t\tthis.setState({ datesBlocked: this.state.car_availability });\r\n        }\r\n        if (this.state.focusedInput === null && focusedInput === 'endDate') {\r\n            this.setState({ focusedInput: 'startDate'})\r\n        } else {\r\n            this.setState({ focusedInput: isMobile ? (focusedInput || 'startDate') : focusedInput })\r\n        }\r\n    }\r\n\r\n    onHeaderHeightInit = (height) => {\r\n        this.setState({ headerHeight: height })\r\n    }\r\n\r\n    onBottomHeightInit = (height) => {\r\n        this.setState({ bottomHeight: height })\r\n    }\r\n\r\n    onInitStartTime = (time) => {\r\n        this.setState({ time_start: time })\r\n    }\r\n\r\n    onInitEndTime = (time) => {\r\n        this.setState({ time_end: time })\r\n    }\r\n\r\n    render() {\r\n        const { startDate, endDate, focusedInput } = this.state;\r\n\r\n        return (\r\n            <div className=\"Datepicker\" style={isMobile ? { height: window.innerHeight, paddingTop: this.state.headerHeight + 15 } : null}>\r\n                <DatepickerHeader\r\n                    onReset={this.onReset}\r\n                    onHeaderHeightInit={this.onHeaderHeightInit}\r\n                    startDate={startDate}\r\n                    time_start={this.state.time_start}\r\n                    endDate={endDate}\r\n                    time_end={this.state.time_end}\r\n                />\r\n                {this.state.datesBlocked\r\n                ? \r\n                    <DatepickerWrapp\r\n                        headerHeight={this.state.headerHeight}\r\n                        bottomHeight={this.state.bottomHeight}\r\n                        startDate={startDate}\r\n                        daySize={this.state.daySize}\r\n                        endDate={endDate}\r\n                        visible={this.state.visible}\r\n                        mode='desktopPrice'\r\n                        datesBlocked={this.state.datesBlocked}\r\n                        car_prices={this.state.car_prices}\r\n                        onDatesChange={this.onDatesChange}\r\n                        onFocusChange={this.onFocusChange}\r\n                        homeDatePicker={this.state.homeDatePicker}\r\n                        cardDatePicker={this.state.cardDatePicker}\r\n                        focusedInput={focusedInput}\r\n                    />\r\n                : null}\r\n                \r\n                <DatepickerBottom\r\n                    daySize={this.state.daySize}\r\n                    onResetTime={this.onResetTime}\r\n                    time_start={this.state.time_start}\r\n                    time_end={this.state.time_end}\r\n                    startDate={startDate}\r\n                    endDate={endDate}\r\n                    datePickerMode={this.state.datePickerMode}\r\n                    onChangeDatePickerMode={this.onChangeDatePickerMode}\r\n                    onInitStartTime={this.onInitStartTime}\r\n                    onInitEndTime={this.onInitEndTime}\r\n                    onBottomHeightInit={this.onBottomHeightInit}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DatePickerDesktopPrice;\r\n","import React, { Component } from 'react';\r\nimport moment from 'moment';\r\nimport DatepickerHeader from '../../components/DatepickerHeader';\r\nimport DatepickerBottom from '../../components/DatepickerBottom';\r\nimport DatepickerWrapp from '../../components/DatepickerWrapp';\r\nimport { isMobile } from \"react-device-detect\";\r\n\r\nclass DatePickerMobile extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            headerHeight: 0,\r\n            bottomHeight: 0,\r\n            minDate: moment(),\r\n            startDate: null,\r\n            endDate: null,\r\n            focusedInput: isMobile ? 'startDate' : null,\r\n            time_start: null,\r\n            calendarFocused: false,\r\n            time_end: null,\r\n            daySize: window.innerWidth / 7,\r\n            start: moment(\"2020-06-05 00:00\", \"YYYY-MM-DD HH:mm\"),\r\n            end: moment(\"2020-06-05 23:30\", \"YYYY-MM-DD HH:mm\"),\r\n            end_start: moment(\"2020-06-05 00:00\", \"YYYY-MM-DD HH:mm\"),\r\n            end_end: moment(\"2020-06-05 23:30\", \"YYYY-MM-DD HH:mm\"),\r\n            classStart: null\r\n        };\r\n    }\r\n\r\n    onReset = () => {\r\n        this.setState({ startDate: null, endDate: null, time_start: null, time_end: null });\r\n    }\r\n\r\n    onResetTime = () => {\r\n        this.setState({ time_start: null, time_end: null });\r\n    }\r\n\r\n    onDatesChange = ({ startDate, endDate }) => {\r\n        this.setState({ startDate, endDate })\r\n    }\r\n\r\n    onFocusChange = focusedInput => this.setState({ focusedInput: isMobile ? (focusedInput || 'startDate') : focusedInput })\r\n\r\n    onHeaderHeightInit = (height) => {\r\n        this.setState({ headerHeight: height })\r\n    }\r\n\r\n    onBottomHeightInit = (height) => {\r\n        this.setState({ bottomHeight: height })\r\n    }\r\n\r\n    onInitStartTime = (time) => {\r\n        this.setState({ time_start: time })\r\n    }\r\n\r\n    onInitEndTime = (time) => {\r\n        this.setState({ time_end: time })\r\n    }\r\n\r\n    render() {\r\n        const { startDate, endDate, focusedInput } = this.state;\r\n\r\n        return (\r\n            <div className=\"Datepicker\" style={isMobile ? { height: window.innerHeight, paddingTop: this.state.headerHeight + 15 } : null}>\r\n                <DatepickerHeader\r\n                    onReset={this.onReset}\r\n                    onHeaderHeightInit={this.onHeaderHeightInit}\r\n                    startDate={startDate}\r\n                    time_start={this.state.time_start}\r\n                    endDate={endDate}\r\n                    time_end={this.state.time_end}\r\n                />\r\n                <DatepickerWrapp\r\n                    headerHeight={this.state.headerHeight}\r\n                    bottomHeight={this.state.bottomHeight}\r\n                    startDate={startDate}\r\n                    daySize={this.state.daySize}\r\n                    endDate={endDate}\r\n                    mode='mobile'\r\n                    onDatesChange={this.onDatesChange}\r\n                    onFocusChange={this.onFocusChange}\r\n                    homeDatePicker={this.state.homeDatePicker}\r\n                    cardDatePicker={this.state.cardDatePicker}\r\n                    focusedInput={focusedInput}\r\n                />\r\n                <DatepickerBottom\r\n                    daySize={this.state.daySize}\r\n                    onResetTime={this.onResetTime}\r\n                    time_start={this.state.time_start}\r\n                    time_end={this.state.time_end}\r\n                    startDate={startDate}\r\n                    endDate={endDate}\r\n                    mode='mobile'\r\n                    datePickerMode={this.state.datePickerMode}\r\n                    onChangeDatePickerMode={this.onChangeDatePickerMode}\r\n                    onInitStartTime={this.onInitStartTime}\r\n                    onInitEndTime={this.onInitEndTime}\r\n                    onBottomHeightInit={this.onBottomHeightInit}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DatePickerMobile;","import React, { Component } from 'react';\nimport DatePickerDesktop from './pages/DatepickerDesktop';\nimport DatePickerDesktopPrice from './pages/DatepickerDesktopPrice';\nimport DatePickerMobile from './pages/DatepickerMobile';\nimport { isMobile, isBrowser } from \"react-device-detect\";\nimport {\n\tRoute,\n\tSwitch,\n\tRedirect,\n\tHashRouter,\n\twithRouter\n} from \"react-router-dom\";\nimport './App.css';\n\nclass App extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tcar_availability: null,\n\t\t\tcar_prices: null,\n\t\t\tdatesBlocked: null\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tif (isMobile) {\n\t\t\tdocument.getElementsByTagName(\"html\")[0].classList.add('is-mobile-device');\n\t\t}\n\n\t\tif (isBrowser) {\n\t\t\tdocument.getElementsByTagName(\"html\")[0].classList.add('is-desktop-device');\n\t\t}\n\t}\n\n\trender() {\n\t\tconst { history } = this.props\n\t\n\t\treturn (\n\t\t\t<div className=\"App\" >\n\t\t\t\t<HashRouter history={history} basename='/'>\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route history={history} path='/main' component={DatePickerDesktop} />\n\t\t\t\t\t\t<Route history={history} path='/profile' component={DatePickerDesktopPrice} />\n\t\t\t\t\t\t<Route history={history} path='/mobile' component={DatePickerMobile} />\n\t\t\t\t\t\t<Redirect from='/' to='/main' />\n\t\t\t\t\t</Switch>\n\t\t\t\t</HashRouter>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default withRouter(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Router } from \"react-router-dom\";\nimport { createBrowserHistory } from 'history';\nimport * as serviceWorker from './serviceWorker';\n\nconst history = createBrowserHistory();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router history={history}>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
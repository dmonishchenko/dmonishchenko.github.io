{"version":3,"sources":["components/DatepickerHeader/index.js","components/DatepickerBottom/index.js","components/DatepickerWrapp/index.js","pages/Datepicker/index.js","App.js","serviceWorker.js","index.js"],"names":["DatepickerHeader","onHeaderHeightInit","this","props","headerElement","clientHeight","startDate","time_start","endDate","time_end","onReset","className","ref","onClick","type","moment","format","Component","DatepickerBottom","handleOnChangeStart","data","onInitStartTime","data_start","from","sliderWidth","timerangeItem","clientWidth","setState","class","end_start","handleOnChangeEnd","onInitEndTime","classEnd","handleOnFinish","start_date","end_date","isAfter","ionSliderEnd","update","min","state","start","max","end","step","hide_min_max","Number","handleOnFinishEnd","prettify","num","isMobile","alert","end_end","end_selected","onBottomHeightInit","bottomElement","nextProps","onResetTime","ionSliderStart","daySize","style","paddingLeft","r","parseFloat","onChange","onFinish","DatepickerWrapp","renderDay","day","height","Math","ceil","renderDayDesktop","headerDay","selectOnlyStart","heightWrapp","focusedInput","onDatesChange","onFocusChange","headerHeight","bottomHeight","window","innerHeight","orientation","numberOfMonths","renderDayContents","noNavButtons","noBorder","minimumNights","hideKeyboardShortcutsPanel","isOutsideRange","isInclusivelyAfterDay","isBrowser","DatePicker","time","minDate","innerWidth","classStart","paddingTop","App","document","getElementsByTagName","classList","add","console","log","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"+ZAmDeA,G,0LA3CPC,EAF6BC,KAAKC,MAA5BF,oBAEaC,KAAKE,cAAcC,gB,+BAGhC,IAAD,SACuDH,KAAKC,MAA1DG,EADF,EACEA,UAAWC,EADb,EACaA,WAAYC,EADzB,EACyBA,QAASC,EADlC,EACkCA,SAAUC,EAD5C,EAC4CA,QAEjD,OACI,yBAAKC,UAAU,oBAAoBC,IAAK,SAACR,GAAoB,EAAKA,cAAgBA,IAC9E,yBAAKO,UAAU,4BACX,4BAAQA,UAAU,2BAA2BE,QAASH,EAASI,KAAK,UAApE,UAEJ,yBAAKH,UAAU,4BACX,yBAAKA,UAAU,2BACX,yBAAKA,UAAU,2BACVL,EACKS,IAAOT,GAAWU,OAAO,eACzB,cAGV,yBAAKL,UAAU,2BACVJ,EAAaQ,IAAOR,EAAY,KAAKS,OAAO,QAAU,OAG/D,yBAAKL,UAAU,iCACf,yBAAKA,UAAU,2BACX,yBAAKA,UAAU,2BACX,yBAAKA,UAAU,2BACVH,EACKO,IAAOP,GAASQ,OAAO,eACvB,YAGV,yBAAKL,UAAU,2BACVF,EAAWM,IAAON,EAAU,KAAKO,OAAO,QAAU,c,GArCpDC,c,gBCkOhBC,G,yDA/NX,WAAYf,GAAQ,IAAD,8BACf,cAAMA,IA+CVgB,oBAAsB,SAACC,GAAU,IACrBC,EAAoB,EAAKlB,MAAzBkB,gBACFC,EAAaP,IAAOK,EAAKG,KAAM,KAAKP,OAAO,QAC3CQ,EAAc,EAAKC,cAAcC,YAEvC,EAAKC,SAAS,CAAEC,MAAO,cAAeJ,YAAaA,EAAaK,UAAWd,IAAO,cAAD,OAAeO,GAAc,sBAC9GD,EAAgBD,EAAKG,OAtDN,EAyDnBO,kBAAoB,SAACV,GAAU,IACnBW,EAAkB,EAAK5B,MAAvB4B,cAER,EAAKJ,SAAS,CAAEK,SAAU,gBAC1BD,EAAcX,EAAKG,OA7DJ,EAgEnBU,eAAiB,SAACb,GAAU,IAAD,EAC4C,EAAKjB,MAAhEG,EADe,EACfA,UAAWE,EADI,EACJA,QAASuB,EADL,EACKA,cAAetB,EADpB,EACoBA,SAAUF,EAD9B,EAC8BA,WAIrD,GAFA,EAAKoB,SAAS,CAAEC,MAAO,OAEnBtB,GAAaE,EAAS,CACtB,IAAI0B,EAAanB,IAAOT,GAAWU,OAAO,cACtCmB,EAAWpB,IAAOP,GAASQ,OAAO,cAElCD,IAAOoB,GAAUC,QAAQF,GACzB,EAAKG,aAAaC,OAAO,CACrBC,IAAK,EAAKC,MAAMC,MAAMzB,OAAO,KAC7B0B,IAAK,EAAKF,MAAMG,IAAI3B,OAAO,KAC3B4B,KAAM,KACNC,cAAc,IAGbpC,EAUuB,kBAAbA,EACHF,EAAauC,OAAOrC,EAASO,OAAO,QACpCe,EAAc,EAAKS,MAAMX,WACzB,EAAKQ,aAAaC,OAAO,CACrBC,IAAK,EAAKC,MAAMC,MAAMzB,OAAO,KAC7B0B,IAAK,EAAKF,MAAMG,IAAI3B,OAAO,KAC3BO,KAAM,EAAKiB,MAAMX,UAAUb,OAAO,KAClC4B,KAAM,KACNC,cAAc,KAIlBtC,EAAauC,OAAOrC,KACpBsB,EAAc,EAAKS,MAAMX,WACzB,EAAKQ,aAAaC,OAAO,CACrBC,IAAK,EAAKC,MAAMC,MAAMzB,OAAO,KAC7B0B,IAAK,EAAKF,MAAMG,IAAI3B,OAAO,KAC3BO,KAAM,EAAKiB,MAAMX,UAAUb,OAAO,KAClC4B,KAAM,KACNC,cAAc,MA5B1Bd,EAAc,EAAKS,MAAMX,WACzB,EAAKQ,aAAaC,OAAO,CACrBC,IAAK,EAAKC,MAAMC,MAAMzB,OAAO,KAC7B0B,IAAK,EAAKF,MAAMG,IAAI3B,OAAO,KAC3BO,KAAM,EAAKiB,MAAMX,UAAUb,OAAO,KAClC4B,KAAM,KACNC,cAAc,UA4BlBvC,GAAcE,IACjBC,EAUuB,kBAAbA,EACHF,EAAauC,OAAOrC,EAASO,OAAO,QACpCe,EAAc,EAAKS,MAAMX,WACzB,EAAKQ,aAAaC,OAAO,CACrBC,IAAK,EAAKC,MAAMC,MAAMzB,OAAO,KAC7B0B,IAAK,EAAKF,MAAMG,IAAI3B,OAAO,KAC3BO,KAAM,EAAKiB,MAAMX,UAAUb,OAAO,KAClC4B,KAAM,KACNC,cAAc,KAIlBtC,EAAauC,OAAOrC,KACpBsB,EAAc,EAAKS,MAAMX,WACzB,EAAKQ,aAAaC,OAAO,CACrBC,IAAK,EAAKC,MAAMC,MAAMzB,OAAO,KAC7B0B,IAAK,EAAKF,MAAMG,IAAI3B,OAAO,KAC3BO,KAAM,EAAKiB,MAAMX,UAAUb,OAAO,KAClC4B,KAAM,KACNC,cAAc,MA5B1Bd,EAAc,EAAKS,MAAMX,WACzB,EAAKQ,aAAaC,OAAO,CACrBC,IAAK,EAAKC,MAAMC,MAAMzB,OAAO,KAC7B0B,IAAK,EAAKF,MAAMG,IAAI3B,OAAO,KAC3BO,KAAM,EAAKiB,MAAMX,UAAUb,OAAO,KAClC4B,KAAM,KACNC,cAAc,OA5HX,EA0JnBE,kBAAoB,WAChB,EAAKpB,SAAS,CAAEK,SAAU,QA3JX,EA8JnBgB,SAAW,SAACC,GACR,OAAOlC,IAAOkC,EAAK,KAAKjC,OAAO,SA/JhB,EAkKnBH,QAAU,WAAO,IAAD,EACyC,EAAKV,MAAlDG,EADI,EACJA,UAAWE,EADP,EACOA,QAASD,EADhB,EACgBA,WAAYE,EAD5B,EAC4BA,SAEpCyC,WACI5C,GAAaE,EACb2C,MAAM,GAAD,OAAIpC,IAAOT,GAAWU,OAAO,UAA7B,aAA2CD,IAAOR,EAAY,KAAKS,OAAO,QAA1E,cAAuFD,IAAOP,GAASQ,OAAO,UAA9G,aAA4HD,IAAON,EAAU,KAAKO,OAAO,UAE9JmC,MAAM,iCAGN7C,GAAaE,EACb2C,MAAM,GAAD,OAAIpC,IAAOT,GAAWU,OAAO,UAA7B,cAA4CD,IAAOP,GAASQ,OAAO,YAExEmC,MAAM,kCA5Kd,EAAKX,MAAQ,CACT/B,SAAU,KACVgC,MAAO1B,IAAO,mBAAoB,oBAClC4B,IAAK5B,IAAO,mBAAoB,oBAChCc,UAAWd,IAAO,mBAAoB,oBACtCqC,QAASrC,IAAO,mBAAoB,oBACpCsC,aAAc,KACdzB,MAAO,MAVI,E,iEAiBf0B,EAF+BpD,KAAKC,MAA5BmD,oBAEWpD,KAAKqD,cAAclD,gB,gDAGhBmD,GACtB,GAAIA,EAAUlD,YAAcJ,KAAKC,MAAMG,WAAakD,EAAUhD,UAAYN,KAAKC,MAAMK,QAAS,CAAC,IACpFF,EAAuBkD,EAAvBlD,UAAWE,EAAYgD,EAAZhD,QACViD,EAAgBvD,KAAKC,MAArBsD,YACJvB,EAAanB,IAAOT,GAAWU,OAAO,cACtCmB,EAAWpB,IAAOP,GAASQ,OAAO,eAEjCD,IAAOoB,GAAUC,QAAQF,IAAegB,aACzCO,IACAvD,KAAKwD,eAAepB,OAAO,CACvBC,IAAKrC,KAAKsC,MAAMC,MAAMzB,OAAO,KAC7B0B,IAAKxC,KAAKsC,MAAMG,IAAI3B,OAAO,KAC3BO,KAAMrB,KAAKsC,MAAMC,MAAMzB,OAAO,KAC9B4B,KAAM,KACNC,cAAc,IAGlB3C,KAAKmC,aAAaC,OAAO,CACrBC,IAAKrC,KAAKsC,MAAMC,MAAMzB,OAAO,KAC7B0B,IAAKxC,KAAKsC,MAAMG,IAAI3B,OAAO,KAC3BO,KAAMrB,KAAKsC,MAAMC,MAAMzB,OAAO,KAC9B4B,KAAM,KACNC,cAAc,Q,+BA0IpB,IAAD,OACGc,EAAYzD,KAAKC,MAAjBwD,QAER,OACI,yBAAKhD,UAAU,oBAAoBC,IAAK,SAAC2C,GAAoB,EAAKA,cAAgBA,IAC7EL,YACG,yBAAKvC,UAAU,aACX,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,wBAAwBiD,MAAO,CAAEC,YAAaF,EAAU,MAAvE,SACA,yBAAK/C,IAAK,SAAAkD,GAAC,OAAI,EAAKrC,cAAgBqC,GAAGnD,UAAS,iCAA4BT,KAAKsC,MAAMZ,OAAS1B,KAAKsC,MAAMZ,QACvG,kBAAC,IAAD,CACIhB,IAAK,SAAAkD,GAAC,OAAI,EAAKJ,eAAiBI,GAChCvB,IAAKwB,WAAW7D,KAAKsC,MAAMC,MAAMzB,OAAO,MACxC0B,IAAKqB,WAAW7D,KAAKsC,MAAMG,IAAI3B,OAAO,MACtC4B,KAAM,KACNC,cAAc,EACdG,SAAU9C,KAAK8C,SACfgB,SAAU9D,KAAKiB,oBACf8C,SAAU/D,KAAK+B,mBAG3B,yBAAKtB,UAAU,kBACX,yBAAKA,UAAU,wBAAwBiD,MAAO,CAAEC,YAAaF,EAAU,MAAvE,OACA,yBAAKhD,UAAS,iCAA4BT,KAAKsC,MAAMR,UAAY9B,KAAKsC,MAAMR,WACxE,kBAAC,IAAD,CACIpB,IAAK,SAAAkD,GAAC,OAAI,EAAKzB,aAAeyB,GAC9BvB,IAAKwB,WAAW7D,KAAKsC,MAAMX,UAAUb,OAAO,MAC5C0B,IAAKqB,WAAW7D,KAAKsC,MAAMY,QAAQpC,OAAO,MAC1C4B,KAAM,KACNC,cAAc,EACdG,SAAU9C,KAAK8C,SACfgB,SAAU9D,KAAK4B,kBACfmC,SAAU/D,KAAK6C,uBAKnC,4BAAQpC,UAAU,kBAAkBE,QAASX,KAAKW,QAASC,KAAK,UAAhE,a,GA1NeG,c,iBC4FhBiD,G,gEAtFX,WAAY/D,GAAQ,IAAD,8BACf,cAAMA,IASVgE,UAAY,SAACC,GACT,IAAMT,EAAU,EAAKxD,MAAMwD,QAE3B,OACI,yBAAKhD,UAAU,oBAAoBiD,MAAO,CAAES,OAAQC,KAAKC,KAAKZ,KACzDS,EAAIpD,OAAO,OAfL,EAoBnBwD,iBAAmB,SAACJ,GAChB,OACI,yBAAKzD,UAAU,qBACVyD,EAAIpD,OAAO,OApBpB,EAAKwB,MAAQ,CACT6B,OAAQ,EACRI,UAAW,EACXC,iBAAiB,GANN,E,sEA4BOlB,GAClBA,EAAUlD,YAAckD,EAAUhD,QAClCN,KAAKyB,SAAS,CAAC+C,iBAAiB,IACxBlB,EAAUlD,WAAckD,EAAUhD,QAEnCgD,EAAUlD,WAAakD,EAAUhD,SACxCN,KAAKyB,SAAS,CAAC+C,iBAAiB,IAFhCxE,KAAKyB,SAAS,CAAC+C,iBAAiB,M,+BAM9B,IAEFC,EAFC,EAC0GzE,KAAKC,MAA5GG,EADH,EACGA,UAAWE,EADd,EACcA,QAASoE,EADvB,EACuBA,aAAcjB,EADrC,EACqCA,QAASkB,EAD9C,EAC8CA,cAAeC,EAD7D,EAC6DA,cAAeC,EAD5E,EAC4EA,aAAcC,EAD1F,EAC0FA,aAO/F,OAJID,EAAe,GAAKC,EAAe,IACnCL,EAAcM,OAAOC,YAAcH,EAAeC,EAAe,IAIjE,yBAAKrE,UAAS,2BAAsBT,KAAKsC,MAAMkC,gBAAkB,qBAAuB,MAAQd,MAAOV,WAAW,CAAEmB,OAAQM,GAAgB,MACvIzB,YACG,kBAAC,2BAAD,CACI5C,UAAWA,EACXE,QAASA,EACTqE,cAAeA,EACfD,aAAcA,EACdE,cAAeA,EACfK,YAAY,qBACZC,eAAgB,GAChBC,kBAAmBnF,KAAKiE,UACxBmB,cAAY,EACZC,UAAQ,EACRC,cAAe,EACf7B,QAASA,EACT8B,4BAA4B,EAC5BC,eAAgB,SAAAtB,GAAG,OAAKuB,gCAAsBvB,EAAKrD,UAG1D6E,aACG,kBAAC,2BAAD,CACItF,UAAWA,EACXE,QAASA,EACTqE,cAAeA,EACfD,aAAcA,EACdE,cAAeA,EACfO,kBAAmBnF,KAAKsE,iBACxBgB,cAAe,EACfJ,eAAgB,EAChBG,UAAQ,EACRE,4BAA4B,EAC5BC,eAAgB,SAAAtB,GAAG,OAAKuB,gCAAsBvB,EAAKrD,e,GA/E7CE,cCyFf4E,G,yDA3FX,WAAY1F,GAAQ,IAAD,8BACf,cAAMA,IAoBVO,QAAU,WACN,EAAKiB,SAAS,CAAErB,UAAW,KAAME,QAAS,KAAMD,WAAY,KAAME,SAAU,QAtB7D,EAyBnBgD,YAAc,WACV,EAAK9B,SAAS,CAAEpB,WAAY,KAAME,SAAU,QA1B7B,EA6BnBoE,cAAgB,YAA2B,IAAzBvE,EAAwB,EAAxBA,UAAWE,EAAa,EAAbA,QACzB,EAAKmB,SAAS,CAAErB,YAAWE,aA9BZ,EAkCnBsE,cAAgB,SAAAF,GAAY,OAAI,EAAKjD,SAAS,CAAEiD,aAAcA,GAAgB,eAlC3D,EAoCnB3E,mBAAqB,SAACoE,GAClB,EAAK1C,SAAS,CAAEoD,aAAcV,KArCf,EAwCnBf,mBAAqB,SAACe,GAClB,EAAK1C,SAAS,CAAEqD,aAAcX,KAzCf,EA4CnBhD,gBAAkB,SAACyE,GACf,EAAKnE,SAAS,CAAEpB,WAAYuF,KA7Cb,EAgDnB/D,cAAgB,SAAC+D,GACb,EAAKnE,SAAS,CAAElB,SAAUqF,KA9C1B,EAAKtD,MAAQ,CACTuC,aAAc,EACdC,aAAc,EACde,QAAShF,MACTT,UAAW,KACXE,QAAS,KACToE,aAAc,YACdrE,WAAY,KACZE,SAAU,KACVkD,QAASsB,OAAOe,WAAa,EAC7BvD,MAAO1B,IAAO,mBAAoB,oBAClC4B,IAAK5B,IAAO,mBAAoB,oBAChCc,UAAWd,IAAO,mBAAoB,oBACtCqC,QAASrC,IAAO,mBAAoB,oBACpCkF,WAAY,MAjBD,E,qDAoDT,IAAD,EACwC/F,KAAKsC,MAA1ClC,EADH,EACGA,UAAWE,EADd,EACcA,QAASoE,EADvB,EACuBA,aAE5B,OACI,yBAAKjE,UAAU,aAAaiD,MAAQV,WAAW,CAAEmB,OAAQY,OAAOC,YAAagB,WAAYhG,KAAKsC,MAAMuC,aAAe,IAAO,MACtH,kBAAC,EAAD,CACIrE,QAASR,KAAKQ,QACdT,mBAAoBC,KAAKD,mBACzBK,UAAWA,EACXC,WAAYL,KAAKsC,MAAMjC,WACvBC,QAASA,EACTC,SAAUP,KAAKsC,MAAM/B,WAEzB,kBAAC,EAAD,CACIsE,aAAc7E,KAAKsC,MAAMuC,aACzBC,aAAc9E,KAAKsC,MAAMwC,aACzB1E,UAAWA,EACXqD,QAASzD,KAAKsC,MAAMmB,QACpBnD,QAASA,EACTqE,cAAe3E,KAAK2E,cACpBC,cAAe5E,KAAK4E,cACpBF,aAAcA,IAElB,kBAAC,EAAD,CACIjB,QAASzD,KAAKsC,MAAMmB,QACpBF,YAAavD,KAAKuD,YAClBlD,WAAYL,KAAKsC,MAAMjC,WACvBE,SAAUP,KAAKsC,MAAM/B,SACrBH,UAAWA,EACXE,QAASA,EACTa,gBAAiBnB,KAAKmB,gBACtBU,cAAe7B,KAAK6B,cACpBuB,mBAAoBpD,KAAKoD,0B,GArFpBrC,cCiBVkF,G,yLAlBTjD,YACHkD,SAASC,qBAAqB,QAAQ,GAAGC,UAAUC,IAAI,oBAGpDX,aACHQ,SAASC,qBAAqB,QAAQ,GAAGC,UAAUC,IAAI,uB,+BAKxD,OADAC,QAAQC,IAAIvD,YAEX,yBAAKvC,UAAU,OACd,kBAAC,EAAD,W,GAdcM,cCOEyF,QACW,cAA7BzB,OAAO0B,SAASC,UAEe,UAA7B3B,OAAO0B,SAASC,UAEhB3B,OAAO0B,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFZ,SAASa,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLjB,QAAQiB,MAAMA,EAAMC,c","file":"static/js/main.76193a9a.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport moment from 'moment';\r\nimport './style.css';\r\n\r\nclass DatepickerHeader extends Component {\r\n    componentDidMount() {\r\n        let { onHeaderHeightInit } = this.props;\r\n\r\n        onHeaderHeightInit(this.headerElement.clientHeight);\r\n    }\r\n\r\n    render() {\r\n        const {startDate, time_start, endDate, time_end, onReset} = this.props;\r\n\r\n        return (\r\n            <div className=\"Datepicker-header\" ref={(headerElement) => { this.headerElement = headerElement }}>\r\n                <div className=\"Datepicker-header__reset\">\r\n                    <button className=\"Datepicker__button-reset\" onClick={onReset} type=\"button\">Reset</button>\r\n                </div>\r\n                <div className=\"Datepicker-header__wrapp\">\r\n                    <div className=\"Datepicker-header__item\">\r\n                        <div className=\"Datepicker-header__date\">\r\n                            {startDate\r\n                                ? moment(startDate).format(\"ddd, D MMMM\")\r\n                                : 'Start date'\r\n                            }\r\n                        </div>\r\n                        <div className=\"Datepicker-header__time\">\r\n                            {time_start ? moment(time_start, 'x').format(\"H:mm\") : null}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"Datepicker-header__delimiter\"></div>\r\n                    <div className=\"Datepicker-header__item\">\r\n                        <div className=\"Datepicker-header__item\">\r\n                            <div className=\"Datepicker-header__date\">\r\n                                {endDate\r\n                                    ? moment(endDate).format(\"ddd, D MMMM\")\r\n                                    : 'End date'\r\n                                }\r\n                            </div>\r\n                            <div className=\"Datepicker-header__time\">\r\n                                {time_end ? moment(time_end, 'x').format(\"H:mm\") : null}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n    \r\nexport default DatepickerHeader;","import React, { Component } from 'react';\r\nimport moment from 'moment';\r\nimport IonRangeSlider from 'react-ion-slider';\r\nimport { isMobile } from \"react-device-detect\";\r\nimport './style.css';\r\n\r\nclass DatepickerBottom extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            time_end: null,\r\n            start: moment(\"2020-06-05 00:00\", \"YYYY-MM-DD HH:mm\"),\r\n            end: moment(\"2020-06-05 23:30\", \"YYYY-MM-DD HH:mm\"),\r\n            end_start: moment(\"2020-06-05 00:00\", \"YYYY-MM-DD HH:mm\"),\r\n            end_end: moment(\"2020-06-05 23:30\", \"YYYY-MM-DD HH:mm\"),\r\n            end_selected: null,\r\n            class: null\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { onBottomHeightInit } = this.props;\r\n\r\n        onBottomHeightInit(this.bottomElement.clientHeight);\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.startDate !== this.props.startDate || nextProps.endDate !== this.props.endDate) {\r\n            const {startDate, endDate } = nextProps;\r\n            const { onResetTime } = this.props;\r\n            let start_date = moment(startDate).format(\"MM-DD-YYYY\");\r\n            let end_date = moment(endDate).format(\"MM-DD-YYYY\");\r\n\r\n            if (!moment(end_date).isAfter(start_date) && isMobile) {\r\n                onResetTime();\r\n                this.ionSliderStart.update({\r\n                    min: this.state.start.format(\"x\"),\r\n                    max: this.state.end.format(\"x\"),\r\n                    from: this.state.start.format(\"x\"),\r\n                    step: 1800000,\r\n                    hide_min_max: true\r\n                })\r\n\r\n                this.ionSliderEnd.update({\r\n                    min: this.state.start.format(\"x\"),\r\n                    max: this.state.end.format(\"x\"),\r\n                    from: this.state.start.format(\"x\"),\r\n                    step: 1800000,\r\n                    hide_min_max: true\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    handleOnChangeStart = (data) => {\r\n        const { onInitStartTime } = this.props;\r\n        const data_start = moment(data.from, 'x').format(\"H:mm\");\r\n        const sliderWidth = this.timerangeItem.clientWidth;\r\n\r\n        this.setState({ class: 'is-changing', sliderWidth: sliderWidth, end_start: moment(`2020-06-05 ${data_start}`, \"YYYY-MM-DD HH:mm\") });\r\n        onInitStartTime(data.from);   \r\n    }\r\n\r\n    handleOnChangeEnd = (data) => {\r\n        const { onInitEndTime } = this.props;\r\n\r\n        this.setState({ classEnd: 'is-changing' })\r\n        onInitEndTime(data.from);\r\n    }\r\n\r\n    handleOnFinish = (data) => {\r\n        const { startDate, endDate, onInitEndTime, time_end, time_start} = this.props;\r\n\r\n        this.setState({ class: null });\r\n\r\n        if (startDate && endDate) {\r\n            let start_date = moment(startDate).format(\"MM-DD-YYYY\");\r\n            let end_date = moment(endDate).format(\"MM-DD-YYYY\");\r\n\r\n            if (moment(end_date).isAfter(start_date)) {\r\n                this.ionSliderEnd.update({\r\n                    min: this.state.start.format(\"x\"),\r\n                    max: this.state.end.format(\"x\"),\r\n                    step: 1800000,\r\n                    hide_min_max: true\r\n                })\r\n            } else {\r\n                if (!time_end) {\r\n                    onInitEndTime(this.state.end_start)\r\n                    this.ionSliderEnd.update({\r\n                        min: this.state.start.format(\"x\"),\r\n                        max: this.state.end.format(\"x\"),\r\n                        from: this.state.end_start.format(\"x\"),\r\n                        step: 1800000,\r\n                        hide_min_max: true\r\n                    })\r\n                } else {\r\n                    if (typeof time_end === 'object') {\r\n                        if (time_start > Number(time_end.format(\"x\"))) {\r\n                            onInitEndTime(this.state.end_start)\r\n                            this.ionSliderEnd.update({\r\n                                min: this.state.start.format(\"x\"),\r\n                                max: this.state.end.format(\"x\"),\r\n                                from: this.state.end_start.format(\"x\"),\r\n                                step: 1800000,\r\n                                hide_min_max: true\r\n                            })\r\n                        }\r\n                    } else {\r\n                        if (time_start > Number(time_end)) {\r\n                            onInitEndTime(this.state.end_start)\r\n                            this.ionSliderEnd.update({\r\n                                min: this.state.start.format(\"x\"),\r\n                                max: this.state.end.format(\"x\"),\r\n                                from: this.state.end_start.format(\"x\"),\r\n                                step: 1800000,\r\n                                hide_min_max: true\r\n                            })\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } else if (!startDate || !endDate) {\r\n            if (!time_end) {\r\n                onInitEndTime(this.state.end_start)\r\n                this.ionSliderEnd.update({\r\n                    min: this.state.start.format(\"x\"),\r\n                    max: this.state.end.format(\"x\"),\r\n                    from: this.state.end_start.format(\"x\"),\r\n                    step: 1800000,\r\n                    hide_min_max: true\r\n                })\r\n            } else {\r\n                if (typeof time_end === 'object') {\r\n                    if (time_start > Number(time_end.format(\"x\"))) {\r\n                        onInitEndTime(this.state.end_start)\r\n                        this.ionSliderEnd.update({\r\n                            min: this.state.start.format(\"x\"),\r\n                            max: this.state.end.format(\"x\"),\r\n                            from: this.state.end_start.format(\"x\"),\r\n                            step: 1800000,\r\n                            hide_min_max: true\r\n                        })\r\n                    }\r\n                } else {\r\n                    if (time_start > Number(time_end)) {\r\n                        onInitEndTime(this.state.end_start)\r\n                        this.ionSliderEnd.update({\r\n                            min: this.state.start.format(\"x\"),\r\n                            max: this.state.end.format(\"x\"),\r\n                            from: this.state.end_start.format(\"x\"),\r\n                            step: 1800000,\r\n                            hide_min_max: true\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    handleOnFinishEnd = () => {\r\n        this.setState({ classEnd: null })\r\n    }\r\n\r\n    prettify = (num) => {\r\n        return moment(num, 'x').format(\"H:mm\");\r\n    }\r\n\r\n    onClick = () => {\r\n        const { startDate, endDate, time_start, time_end } = this.props;\r\n\r\n        if (isMobile) {\r\n            if (startDate && endDate) {\r\n                alert(`${moment(startDate).format(\"D MMMM\")}, ${moment(time_start, 'x').format(\"H:mm\")} - ${moment(endDate).format(\"D MMMM\")}, ${moment(time_end, 'x').format(\"H:mm\")}`);\r\n            } else {\r\n                alert('Select pickup and return date');\r\n            }\r\n        } else {\r\n            if (startDate && endDate) {\r\n                alert(`${moment(startDate).format(\"D MMMM\")} - ${moment(endDate).format(\"D MMMM\")}`);\r\n            } else {\r\n                alert('Select pickup and return date');\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { daySize } = this.props;\r\n\r\n        return (\r\n            <div className=\"Datepicker-bottom\" ref={(bottomElement) => { this.bottomElement = bottomElement }}>\r\n                {isMobile &&\r\n                    <div className=\"Timerange\">\r\n                        <div className=\"Timerange-item\">\r\n                            <div className=\"Timerange-item__title\" style={{ paddingLeft: daySize / 2.5 }}>Start</div>\r\n                            <div ref={r => this.timerangeItem = r} className={`Timerange-item__slider ${this.state.class && this.state.class}`}>\r\n                                <IonRangeSlider\r\n                                    ref={r => this.ionSliderStart = r}\r\n                                    min={parseFloat(this.state.start.format(\"x\"))}\r\n                                    max={parseFloat(this.state.end.format(\"x\"))}\r\n                                    step={1800000}\r\n                                    hide_min_max={true}\r\n                                    prettify={this.prettify}\r\n                                    onChange={this.handleOnChangeStart}\r\n                                    onFinish={this.handleOnFinish} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"Timerange-item\">\r\n                            <div className=\"Timerange-item__title\" style={{ paddingLeft: daySize / 2.5 }}>End</div>\r\n                            <div className={`Timerange-item__slider ${this.state.classEnd && this.state.classEnd}`}>\r\n                                <IonRangeSlider\r\n                                    ref={r => this.ionSliderEnd = r}\r\n                                    min={parseFloat(this.state.end_start.format(\"x\"))}\r\n                                    max={parseFloat(this.state.end_end.format(\"x\"))}\r\n                                    step={1800000}\r\n                                    hide_min_max={true}\r\n                                    prettify={this.prettify}\r\n                                    onChange={this.handleOnChangeEnd}\r\n                                    onFinish={this.handleOnFinishEnd} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                }\r\n                <button className=\"Datepicker-save\" onClick={this.onClick} type=\"button\">Save</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DatepickerBottom;","import React, { Component } from 'react';\r\nimport 'react-dates/initialize';\r\nimport { DayPickerRangeController, isInclusivelyAfterDay } from 'react-dates';\r\nimport {\r\n    isBrowser,\r\n    isMobile\r\n} from \"react-device-detect\";\r\nimport moment from 'moment';\r\nimport 'react-dates/lib/css/_datepicker.css';\r\nimport './style.css';\r\n\r\nclass DatepickerWrapp extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            height: 0,\r\n            headerDay: 0,\r\n            selectOnlyStart: false\r\n        };\r\n    }\r\n\r\n    renderDay = (day) => {\r\n        const daySize = this.props.daySize;\r\n\r\n        return (\r\n            <div className=\"CalendarDay__item\" style={{ height: Math.ceil(daySize)}}>\r\n                {day.format('D')}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderDayDesktop = (day) => {\r\n        return (\r\n            <div className=\"CalendarDay__item\">\r\n                {day.format('D')}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.startDate && !nextProps.endDate) {\r\n            this.setState({selectOnlyStart: true})\r\n        } else if (!nextProps.startDate && !nextProps.endDate) {\r\n            this.setState({selectOnlyStart: false})\r\n        } else if (nextProps.startDate && nextProps.endDate) {\r\n            this.setState({selectOnlyStart: false})\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { startDate, endDate, focusedInput, daySize, onDatesChange, onFocusChange, headerHeight, bottomHeight} = this.props;\r\n        let heightWrapp;\r\n\r\n        if (headerHeight > 0 && bottomHeight > 0) {\r\n            heightWrapp = window.innerHeight - headerHeight - bottomHeight - 15\r\n        }\r\n\r\n        return (\r\n            <div className={`Datepicker-wrapp ${this.state.selectOnlyStart ? 'is-selecting-start' : null}`} style={isMobile ? { height: heightWrapp } : null}>\r\n                {isMobile &&\r\n                    <DayPickerRangeController\r\n                        startDate={startDate}\r\n                        endDate={endDate}\r\n                        onDatesChange={onDatesChange}\r\n                        focusedInput={focusedInput}\r\n                        onFocusChange={onFocusChange}\r\n                        orientation=\"verticalScrollable\"\r\n                        numberOfMonths={12}\r\n                        renderDayContents={this.renderDay}\r\n                        noNavButtons\r\n                        noBorder\r\n                        minimumNights={0}\r\n                        daySize={daySize}\r\n                        hideKeyboardShortcutsPanel={true}\r\n                        isOutsideRange={day => !isInclusivelyAfterDay(day, moment())}\r\n                    />\r\n                }\r\n                {isBrowser &&\r\n                    <DayPickerRangeController\r\n                        startDate={startDate}\r\n                        endDate={endDate}\r\n                        onDatesChange={onDatesChange}\r\n                        focusedInput={focusedInput}\r\n                        onFocusChange={onFocusChange}\r\n                        renderDayContents={this.renderDayDesktop}\r\n                        minimumNights={0}\r\n                        numberOfMonths={2}\r\n                        noBorder\r\n                        hideKeyboardShortcutsPanel={true}\r\n                        isOutsideRange={day => !isInclusivelyAfterDay(day, moment())}\r\n                    />\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DatepickerWrapp;","import React, { Component } from 'react';\r\nimport moment from 'moment';\r\nimport DatepickerHeader from '../../components/DatepickerHeader';\r\nimport DatepickerBottom from '../../components/DatepickerBottom';\r\nimport DatepickerWrapp from '../../components/DatepickerWrapp';\r\nimport { isMobile } from \"react-device-detect\";\r\nimport './style.css';\r\n\r\nclass DatePicker extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            headerHeight: 0,\r\n            bottomHeight: 0,\r\n            minDate: moment(),\r\n            startDate: null,\r\n            endDate: null,\r\n            focusedInput: 'startDate',\r\n            time_start: null,\r\n            time_end: null,\r\n            daySize: window.innerWidth / 7,\r\n            start: moment(\"2020-06-05 00:00\", \"YYYY-MM-DD HH:mm\"),\r\n            end: moment(\"2020-06-05 23:30\", \"YYYY-MM-DD HH:mm\"),\r\n            end_start: moment(\"2020-06-05 00:00\", \"YYYY-MM-DD HH:mm\"),\r\n            end_end: moment(\"2020-06-05 23:30\", \"YYYY-MM-DD HH:mm\"),\r\n            classStart: null\r\n        };\r\n    }\r\n\r\n    onReset = () => {\r\n        this.setState({ startDate: null, endDate: null, time_start: null, time_end: null });\r\n    }\r\n\r\n    onResetTime = () => {\r\n        this.setState({ time_start: null, time_end: null });\r\n    }\r\n\r\n    onDatesChange = ({startDate, endDate}) => {\r\n        this.setState({ startDate, endDate })\r\n    }\r\n    \r\n\r\n    onFocusChange = focusedInput => this.setState({ focusedInput: focusedInput || 'startDate' })\r\n\r\n    onHeaderHeightInit = (height) => {\r\n        this.setState({ headerHeight: height})\r\n    }\r\n\r\n    onBottomHeightInit = (height) => {\r\n        this.setState({ bottomHeight: height})\r\n    }\r\n\r\n    onInitStartTime = (time) => {\r\n        this.setState({ time_start: time })\r\n    }\r\n\r\n    onInitEndTime = (time) => {\r\n        this.setState({ time_end: time })\r\n    }\r\n\r\n    render() {\r\n        const { startDate, endDate, focusedInput } = this.state;\r\n\r\n        return (\r\n            <div className=\"Datepicker\" style={ isMobile ? { height: window.innerHeight, paddingTop: this.state.headerHeight + 15 } : null}>\r\n                <DatepickerHeader\r\n                    onReset={this.onReset}\r\n                    onHeaderHeightInit={this.onHeaderHeightInit}\r\n                    startDate={startDate}\r\n                    time_start={this.state.time_start}\r\n                    endDate={endDate}\r\n                    time_end={this.state.time_end}\r\n                />\r\n                <DatepickerWrapp\r\n                    headerHeight={this.state.headerHeight}\r\n                    bottomHeight={this.state.bottomHeight}\r\n                    startDate={startDate}\r\n                    daySize={this.state.daySize}\r\n                    endDate={endDate}\r\n                    onDatesChange={this.onDatesChange}\r\n                    onFocusChange={this.onFocusChange}\r\n                    focusedInput={focusedInput}\r\n                />\r\n                <DatepickerBottom\r\n                    daySize={this.state.daySize}\r\n                    onResetTime={this.onResetTime}\r\n                    time_start={this.state.time_start}\r\n                    time_end={this.state.time_end}\r\n                    startDate={startDate}\r\n                    endDate={endDate}\r\n                    onInitStartTime={this.onInitStartTime}\r\n                    onInitEndTime={this.onInitEndTime}\r\n                    onBottomHeightInit={this.onBottomHeightInit}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DatePicker;","import React, { Component } from 'react';\nimport DatePicker from './pages/Datepicker';\nimport { isMobile, isBrowser } from \"react-device-detect\";\nimport './App.css';\n\nclass App extends Component {\n\tcomponentDidMount() {\n\t\tif (isMobile) {\n\t\t\tdocument.getElementsByTagName(\"html\")[0].classList.add('is-mobile-device');\n\t\t}\n\n\t\tif (isBrowser) {\n\t\t\tdocument.getElementsByTagName(\"html\")[0].classList.add('is-desktop-device');\n\t\t}\n\t}\n\trender() {\n\t\tconsole.log(isMobile)\n\t\treturn (\n\t\t\t<div className=\"App\" >\n\t\t\t\t<DatePicker />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}